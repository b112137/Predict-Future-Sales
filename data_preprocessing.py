# -*- coding: utf-8 -*-
"""Data Preprocessing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1shbROj7uSVVva-VY5YbMnnwAWR71vax8

# Load Data
"""

import os
import pandas as pd
import numpy as np
import seaborn as sns
from matplotlib import pyplot as plt
from sklearn.preprocessing import LabelEncoder
import time,datetime
import calendar

sales_train_df = pd.read_csv('sales_train.csv')
test = pd.read_csv('test.csv', index_col ="ID")


"""# Data Preprocessing(Don't need to execute)"""
'''
plt.figure(figsize=(16, 6))
sns.boxenplot(x = "item_price", data = sales_train_df)

plt.figure(figsize=(16, 6))
sns.boxenplot(x = "item_cnt_day", data = sales_train_df)
'''
sales_train_df = sales_train_df[(sales_train_df.item_price < 100000) & (sales_train_df.item_price > 0)]
sales_train_df = sales_train_df[sales_train_df.item_cnt_day < 1001]

sales_train_df.loc[sales_train_df["shop_id"] == 0, "shop_id"] = 57
sales_train_df.loc[sales_train_df["shop_id"] == 1, "shop_id"] = 58
sales_train_df.loc[sales_train_df["shop_id"] == 40, "shop_id"] = 30

test.loc[test["shop_id"] == 0, "shop_id"] = 57
test.loc[test["shop_id"] == 1, "shop_id"] = 58
test.loc[test["shop_id"] == 40, "shop_id"] = 30

sales_train_df = sales_train_df.drop(["date"], axis=1)
'''
df = []
date_block_num = sales_train_df.date_block_num.unique()

for block in date_block_num:
  print(block)
  all_shop = sales_train_df[sales_train_df.date_block_num == block]["shop_id"].unique()
  all_item = sales_train_df[sales_train_df.date_block_num == block]["item_id"].unique()
  for shop in all_shop:
    for item in all_item:
      temp = sales_train_df[(sales_train_df.date_block_num == block) & (sales_train_df.shop_id == shop) & (sales_train_df.item_id == item)]
      df.append([shop, item, block, temp['item_cnt_day'].sum()])

train_df = pd.DataFrame(df, columns=['shop_id','item_id','date_block_num',"item_cnt_month"])
train_df.to_csv("train_df.csv", index=None)
'''

"""# Feature(Don't need to execute)

## Load train data
"""

train_df= pd.read_csv("train_df.csv")
test["date_block_num"] = 34
df_all = pd.concat( (train_df, test), ignore_index=True, sort=False)

"""## Shops"""

shops = pd.read_csv("shops.csv")

shop_city = []
for i in range(len(shops['shop_name'])):
  city = shops['shop_name'][i].split(" ")[0]
  if city == "!Якутск":
    city = "Якутск"
  shop_city.append(city)

shop_city_label = LabelEncoder().fit_transform(shop_city)

shops["shop_city"] = shop_city_label
shops = shops.set_index("shop_id")


"""## Items"""

items = pd.read_csv("items.csv")
items_category = pd.read_csv("item_categories.csv")

items = items.set_index("item_id")

items_category_split = []
for category in items_category["item_category_name"]:
  temp = category.split(" ")[0]
  if temp == "PC":
    temp = "Аксессуары"
  items_category_split.append(temp)

items_category_split_label = LabelEncoder().fit_transform(items_category_split)

items_category["item_category_split"] = items_category_split_label

items_category = items_category.set_index("item_category_id")


item_category_split_all = []
for item in items["item_category_id"]:
  item_df = items_category.loc[item,:]
  item_category_split_all.append(item_df["item_category_split"])

items["item_category_split"] = item_category_split_all


"""## Date"""


Date = []
for i in range(0, 35):
  year = 2013 + int(i/12)
  month = 1 + int(i%12)
  days = calendar.monthrange(year, month)[1]
  week = []
  for j in range(1, days+1):
    week.append( datetime.datetime(year,month,j).weekday()  )
  weekend = week.count(5) + week.count(6)
  Date.append([i, days, weekend])

Date_df = pd.DataFrame(Date, columns=["date_block_num", "days", "weekend"]).set_index("date_block_num")


item_id_appear = df_all.groupby(['item_id'])['date_block_num'].min().reset_index()
item_id_appear['is_new_item'] = 1


shop_item_id_appear = df_all[df_all['date_block_num'] != 0].groupby(['shop_id', 'item_id'])['date_block_num'].min().reset_index()
shop_item_id_appear['shop_old_item_block'] = shop_item_id_appear['date_block_num']
shop_item_id_appear = shop_item_id_appear.drop(columns = ["date_block_num"])


"""## Combine"""

df_all = pd.merge(df_all, shops, on=['shop_id'], how='left')
df_all = df_all.drop(columns=["shop_name"])

df_all = pd.merge(df_all, items, on=['item_id'], how='left')
df_all = df_all.drop(columns=["item_name"])

df_all = pd.merge(df_all, Date_df, on=['date_block_num'], how='left')
df_all

df_all = pd.merge(df_all, item_id_appear, on=['item_id', 'date_block_num'], how='left')
df_all

df_all = pd.merge(df_all, shop_item_id_appear, on=['item_id', 'shop_id'], how='left')
df_all["is_shop_old_item"] = df_all.shop_old_item_block < df_all.date_block_num

df_all = df_all.drop(columns=["shop_old_item_block"])


"""## Time series shift"""
temp = df_all[['date_block_num','shop_id','item_id',"item_cnt_month"]]
for i in range(1,7):
  temp_copy = temp.copy()
  temp_copy["date_block_num"] = temp_copy["date_block_num"] + 1
  temp_copy["item_cnt_month_"+ str(i) +"month_ago"] = temp_copy["item_cnt_month"]
  temp_copy = temp_copy.drop(columns=["item_cnt_month"])
  df_all = pd.merge(df_all, temp_copy, on=['date_block_num','shop_id','item_id'], how='left')


df_all = df_all[(df_all['date_block_num'] > 5)]

df_all.fillna(0, inplace=True)

df_all["shop_id"] = df_all["shop_id"].astype("int")
df_all["item_id"] = df_all["item_id"].astype("int")
df_all["date_block_num"] = df_all["date_block_num"].astype("int")
df_all["item_category_id"] = df_all["item_category_id"].astype("int")
df_all["is_new_item"] = df_all["is_new_item"].astype("int")
df_all["is_shop_old_item"] = df_all["is_shop_old_item"].astype("int")

df_all.to_csv("df_all.csv", index=None)